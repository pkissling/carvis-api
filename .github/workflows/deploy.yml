name: deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: Environment
        default: dev
        required: true

env:
  AWS_REGION: eu-west-1
  ECR_REGISTRY: 547284448024.dkr.ecr.eu-west-1.amazonaws.com

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      branch_w_sha: ${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2

      - name: Declare build variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Download Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
          path: deploy
          name: ${{ needs.prepare.outputs.branch_w_sha }}

      - name: Deploy
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: carvis
          environment_name: ${{ github.event.inputs.environment }}
          version_label: ${{ needs.prepare.outputs.branch_w_sha }}
          region: eu-west-1
          deployment_package: deploy/backend-${{ needs.prepare.outputs.branch_w_sha }}.jar
          use_existing_version_if_available: true
          wait_for_environment_recovery: 300

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - prepare
      - deploy
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: carvis
          SENTRY_PROJECT: api
        with:
          environment: ${{ github.event.inputs.environment }}
